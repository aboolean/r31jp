#! /usr/bin/env python

import os
import sys
import time
import serial
import subprocess
import progressbar

def serial_write(data):
    for char in data:
        port.write(char)
        port.flush()

def serial_read():
    try:
        return port.read()
    except:
        print 'Error connecting to device'
        sys.exit(1)

def wait_for_char(char):
    while True:
        data = serial_read()
        if data == char:
            break

try:
  port = serial.Serial('/dev/tty.usbserial', baudrate=9600)
except serial.SerialException:
  print 'Could not connect to serial port /dev/tty.usbserial'
  print 'Please confirm you device is plugged in and powered on, and the driver is installed'
  sys.exit(1)

if len(sys.argv) < 2:
    print 'Please specify a file to compile and run'
    sys.exit(1)

as31_process = subprocess.Popen(['as31', '-s', sys.argv[1]], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
program, err = as31_process.communicate()

if 'Error' in err:
    print 'Compilation Error'
    print '\n'.join(err.splitlines()[3:])
    sys.exit(1)

num_lines = len(program.splitlines())

program = program.replace('\n', '')
program = program.replace('\r', '')

print 'Hit RESET in MON mode to load code'

wait_for_char('*')
serial_write('DD')
wait_for_char('>')

print 'Downloading Code...'

serial_write(program)

progress = progressbar.AnimatedProgressBar(end=num_lines, width=50)

while True:
    data = serial_read()
    if data != '.':
        break
    progress + 1
    progress.show_progress()

port.close()

os.system('screen /dev/tty.usbserial 9600')
